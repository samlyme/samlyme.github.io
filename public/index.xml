<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sam Ly</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Sam Ly</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Jun 2025 20:42:11 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic rules of Probability</title>
      <link>http://localhost:1313/posts/blog5/</link>
      <pubDate>Wed, 18 Jun 2025 20:42:11 -0700</pubDate>
      <guid>http://localhost:1313/posts/blog5/</guid>
      <description>&lt;p&gt;&lt;em&gt;Credits: Deep Learning, Ian Goodfellow&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;These are just my notes. I like writing.&lt;/p&gt;&#xA;&lt;h1 id=&#34;basic-rules-of-probability&#34;&gt;Basic rules of probability&lt;/h1&gt;&#xA;&lt;h2 id=&#34;31-why-probability&#34;&gt;3.1 Why Probability?&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;de thought I had a pretty decent understanding of the applications of probability, but this book gave me some non-obvious insights about &lt;em&gt;why&lt;/em&gt; probability is so important to the study of machine learning and deep learning.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Probability gives us the ability to quantify and reason about uncertainty.&lt;/strong&gt; But &lt;em&gt;where&lt;/em&gt; does this uncertainty come from?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Union Find Algorithm</title>
      <link>http://localhost:1313/posts/blog4/</link>
      <pubDate>Wed, 18 Jun 2025 20:41:12 -0700</pubDate>
      <guid>http://localhost:1313/posts/blog4/</guid>
      <description>&lt;h1 id=&#34;union-find-algoritm&#34;&gt;Union Find Algoritm&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;Credits: Princeton&amp;rsquo;s Algorithms, Part I&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Union Find is a classic problem in computer science, which entails forming groups of nodes and determining if two nodes are in the same group.&lt;/p&gt;&#xA;&lt;p&gt;Formally stated, you have &lt;em&gt;n&lt;/em&gt; nodes (or sites). &lt;code&gt;union(n1, n2)&lt;/code&gt; creates a connection between nodes &lt;code&gt;n1&lt;/code&gt; and &lt;code&gt;n2&lt;/code&gt;.  &lt;code&gt;connected(n1, n2)&lt;/code&gt; determines whether the two nodes have any path between them. For example, running &lt;code&gt;union(n1, n2)&lt;/code&gt; and &lt;code&gt;union(n2, n3&lt;/code&gt; causes &lt;code&gt;connected(n1, n3)&lt;/code&gt; to return &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Haskell changed the way I think</title>
      <link>http://localhost:1313/posts/blog3/</link>
      <pubDate>Wed, 18 Jun 2025 20:40:54 -0700</pubDate>
      <guid>http://localhost:1313/posts/blog3/</guid>
      <description>&lt;h1 id=&#34;learning-haskell-changed-the-way-i-think&#34;&gt;Learning Haskell changed the way I think&lt;/h1&gt;&#xA;&lt;p&gt;functional programming go brrrr&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shiny Object Syndrome</title>
      <link>http://localhost:1313/posts/blog2/</link>
      <pubDate>Wed, 18 Jun 2025 18:44:34 -0700</pubDate>
      <guid>http://localhost:1313/posts/blog2/</guid>
      <description>&lt;h1 id=&#34;shiny-object-syndrome-isnt-that-bad&#34;&gt;Shiny object syndrome isn&amp;rsquo;t that bad&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Study hard what interests you the most in the most undisciplined, irreverent and original manner possible.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Richard Feynman&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Imperative vs Declarative code</title>
      <link>http://localhost:1313/posts/blog1/</link>
      <pubDate>Wed, 18 Jun 2025 18:23:53 -0700</pubDate>
      <guid>http://localhost:1313/posts/blog1/</guid>
      <description>&lt;h1 id=&#34;imperative-vs-declarative-code&#34;&gt;Imperative vs Declarative code&lt;/h1&gt;&#xA;&lt;p&gt;The most fundamental difference between imperative and declarative code is that imperative code tells the computer &lt;em&gt;how&lt;/em&gt; to achieve a certain goal, while declarative code tells the computer &lt;em&gt;what&lt;/em&gt; a certain goal is, and the computer will achieve that goal for you. Another way to conceptualize this is that with declarative code, the computer &amp;ldquo;knows&amp;rdquo; what the goal is, while with imperative code, the computer doesn&amp;rsquo;t know what the end goal is, and is simply following your instructions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
